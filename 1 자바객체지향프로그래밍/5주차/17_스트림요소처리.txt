**********2024-07-15 수업 22일차**********
스트림(Stream)
-순차적인 처리 할 수 있는 요소(객체)의 시퀀스
컬렉션이나 배열과 같은 데이터 소스에서 수행 할 수 있는 작업의 파이프라인을 의미한다.
자바8부터 지원.
스트림은 함수형 프로그래밍 개념을 자바에 도입하여 복잡한 데이터 조작을 
간결하고 표현력 있게 수행 할 수 있는 방법 제시

자바스트림을 작업하려면
1. 데이터 소스에 스트림을 만들어야 한다.


**********2024-07-16 수업 23일차**********
람다 복습!
//실행 어라운트 패턴
user.action(Computer::adder);  ==> :: 참조

함수형 인터페이스

//Collection에 담긴 객체를 처리하는 반복자 3가지
1. iterator 구성방식
2. stream 구성방식
3. while(iter.hasNext() == true) { Object next = iter.next(); }

외부 반복자 방식
-컬렉션의 요소를 컬렉션 바깥쪽으로(개발자코드 -> 데이터 처리)으로 반복해서 가져온다.

내부 반복자 방식
-요소 처리방법을 컬렉션 내부로 주입시켜서 요소를 처리


**********2024-07-17 수업24일차**********
요소 기본 집계 ( Aggregate ) -최종 처리 기능
요소들을 처리해서 합계, 평균, 최대값, 최소값, 카운팅 ==> 하나의 값 산출하는 것 
대량의 데이터를 가공해서 하나의 값으로 츅소하는 리덕션(reduction) 기능을 제공한다.

최종 처리 메소드
count()
findFirst()
max()
min()
average()
sum()

====Redis 데이터 타입====학습하기

null : null point Exception 
 값이 존재 하지않는 상황을 표시하기 위해 만든 개념
reference value(참조값)의 기본값 ==> 자바에서 null

C언어에서 생성된 메모리의 주소를 저장하는 변수 =  "포인터"
자바에서 null ==> 주소값이 없는 것 (아무것도 가르키고 있지 않다.)

============================================
Optional 클래스
( NPE : Null Point Exception )
null을 방지하기 위해서는 null 검사해야 변수가 많은 경우 사전에 NPE 상황을 최소화 할 수 있다.

=============================================
자바에서 제공하는 함수형 인터페이스
-supplier<T>	: 매개변수T 없이 반환값만 갖는 함수형 인터페이스 T get() 추상메소드를 가지고 있다.
-Consumer<T>	: 객체T를 매개변수로 받아서 사용하고 반환값은 없는 인터페이스 void accept
-Function<T, R> 	: 객체 T를 받아서 연산후 R로 반환
-Predicate<T>

