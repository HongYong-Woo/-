*****2024-07-05 수업 17일차******
*예외처리 
에러(error) => 컴퓨터 하드웨어 고장으로 인해 응용프로그램 실행 오류 발생
예외(exception)=>잘못된 코드 작성, API의 잘못된 사용에 의해 발생되는 오류
예외가 발생하면 프로그램은 곧바로 종료된다는 점은 에러와 동일하지만,
예외 처리를 처리하면 계속 실행 상태를 유지 할 수 있다.

예외 종류
1.일반 예외(exception) : 컴파일러가 예외처리 코드 여부를 검사하는 예외
2.실행 예외(runtime exception) : 컴파일러가 예외 처리 코드 여부를 검사하지 않는 예외

	throwable
Exception	     Error
자바는 예외가 발생하면 예외 클래스로부터 객체를 생성한다.
이 객체는 예외 처리시 사옹된다.
자바의 모든 에러와 예외 클래스는 throwable 클래스로부터 상속 받아 만들어진다.



******2024-07-09 수업18일차******

LomBok 라이브러리란?
어노테이션(@) 기반으로 코드 자동완성 기능을 제공하는 라이브러리
spring, spring boot 로 web 개발을 할때 반복되는 코드가 가독성을 떨어트리므로
이러한 반복적 코드를 제공하는 라이브러리를 사용한다.
이때 가장 일반적으로 사용하는 라이브러리가 롬복이다.
Legacy 시스템(AS-IS)를 TO-BE 로 개선하는 작업시 사용한다.
생산성이나 편의성을 위해 사용


 clone()
자바 Object 클래스의 clone()메서드는 객체복사 메서드

얕은 복사(shallow copy) : 주소값을 복사
깊은 복사(deep copy) : 실제 값을 복사(새로운 메모리 공간에 복사)


implements Cloneable 필요
protected Object clone() throws CloneNotSupportedException {
	return super.clone();
}


박싱, 언박싱
Integer obj = 100;	=> 박싱 
int val = obj; 	=> 언박싱



*******2024-07-10 수업 19일차*******
여기서부터 java-advanceStudent 프로젝트......

제너릭 <T>  어느타입을 받을 지 알 수없을때 사용
-결정되지 않은 타입을 파라미터로 처리하고 실제 사용할때 (인스턴스 생성시) 파러미터를 구체적인 타입으로 대체시키는 기능
< T >  T를 A~Z 중 하나 사용 가능, 
기본타입(int , char, float, 등) 사용 불가 => Wrapper클래스(Integer, String, Float, 등) 사용

제너릭 쓰는 이유
1. 자바에서 타입의 안정을 높이기 위해
2. 코드의 재사용성 증가 -제너릭을 사용함으로써 개발자는 컴파일 시점에 타입 체크를 할 수 있기 떄문

만약 제너릭을 사용하지 않을 경우
컬렉션(자바에서 제공하는 자료구조)은 객체 저장한다.
=>컬렉션은 다양한 타입의 객체를 저장 할 수 있다.
=>타입 안전성을 보장하지 못한다 라는 의미 이며, 객체를 검색하거나 사용할 때마다 타입 비교와 타입 변환해야하는 과정이 필요하다.

제너릭을 사용하면 특정 타입의 객체만 저장 할 수 있는 컬렉션을 만들고 타입변환 없이
 객체를 추출 할 수 있다.
이로써 코드의 안전성과 가독성을 향상 시킨다.







